{
  "language": "python",
  "symbol": {
    "id": "python;json.dumps",
    "name": "dumps",
    "namespace": {
      "id": "python;json",
      "kind": "module",
      "repr": "json",
      "type": "module",
      "type_id": ""
    },
    "value": [
      {
        "id": "python;json.dumps",
        "kind": "function",
        "repr": "json.dumps",
        "type": "function",
        "type_id": "",
        "synopsis": "Serialize obj to a JSON formatted str using this conversion\ntable.  If ensure_ascii is False, the result may\ncontain non-ASCII characters and the return value may be a unicode\ninstance.\nThe arguments have the same meaning as in dump().\nNote\nKeys in key/value pairs of JSON are always of the type str. When\na dictionary is converted into JSON, all the keys of the dictionary are\ncoerced to strings. As a result of this, if a dictionary is converted\ninto JSON and then back into a dictionary, the dictionary",
        "details": {
          "function": {
            "parameters": [
              {
                "name": "obj",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": null,
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "skipkeys",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "ensure_ascii",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "check_circular",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "allow_nan",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "cls",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "python;__builtin__.None",
                        "kind": "instance",
                        "repr": "None",
                        "type": "NoneType",
                        "type_id": "python;types.NoneType"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "indent",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "python;__builtin__.None",
                        "kind": "instance",
                        "repr": "None",
                        "type": "NoneType",
                        "type_id": "python;types.NoneType"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "separators",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "python;__builtin__.None",
                        "kind": "instance",
                        "repr": "None",
                        "type": "NoneType",
                        "type_id": "python;types.NoneType"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "encoding",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "str",
                        "type": "str",
                        "type_id": "python;__builtin__.str"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "default",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "python;__builtin__.None",
                        "kind": "instance",
                        "repr": "None",
                        "type": "NoneType",
                        "type_id": "python;types.NoneType"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              },
              {
                "name": "sort_keys",
                "inferred_value": null,
                "synopsis": "",
                "language_details": {
                  "python": {
                    "default_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "annotation": null,
                    "keyword_only": false
                  }
                }
              }
            ],
            "return_value": null,
            "signatures": [
              {
                "args": [
                  {
                    "name": "obj",
                    "types": [
                      {
                        "id": "python;__builtin__.dict",
                        "name": "dict",
                        "examples": [
                          "{}",
                          "{'success': True}",
                          "{\"message\": message}"
                        ]
                      },
                      {
                        "id": "python;__builtin__.str",
                        "name": "str",
                        "examples": [
                          "\"'Invalid state parameter.'\"",
                          "\"'Failed to upgrade the authorization code.'\"",
                          "\"'Current user not connected.'\""
                        ]
                      },
                      {
                        "id": "python;...",
                        "name": "",
                        "examples": null
                      }
                    ]
                  }
                ],
                "language_details": {
                  "python": {
                    "kwargs": null
                  }
                }
              },
              {
                "args": [
                  {
                    "name": "obj",
                    "types": [
                      {
                        "id": "python;__builtin__.dict",
                        "name": "dict",
                        "examples": [
                          "{}",
                          "{'success': True}",
                          "{\"message\": message}"
                        ]
                      },
                      {
                        "id": "python;__builtin__.str",
                        "name": "str",
                        "examples": [
                          "\"'Invalid state parameter.'\"",
                          "\"'Failed to upgrade the authorization code.'\"",
                          "\"'Current user not connected.'\""
                        ]
                      },
                      {
                        "id": "python;...",
                        "name": "",
                        "examples": null
                      }
                    ]
                  }
                ],
                "language_details": {
                  "python": {
                    "kwargs": [
                      {
                        "name": "indent",
                        "types": [
                          {
                            "id": "python;__builtin__.int",
                            "name": "int",
                            "examples": [
                              "4",
                              "2",
                              "1"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "args": [
                  {
                    "name": "obj",
                    "types": [
                      {
                        "id": "python;__builtin__.dict",
                        "name": "dict",
                        "examples": [
                          "{}",
                          "{'success': True}",
                          "{\"message\": message}"
                        ]
                      },
                      {
                        "id": "python;__builtin__.str",
                        "name": "str",
                        "examples": [
                          "\"'Invalid state parameter.'\"",
                          "\"'Failed to upgrade the authorization code.'\"",
                          "\"'Current user not connected.'\""
                        ]
                      },
                      {
                        "id": "python;...",
                        "name": "",
                        "examples": null
                      }
                    ]
                  }
                ],
                "language_details": {
                  "python": {
                    "kwargs": [
                      {
                        "name": "indent",
                        "types": [
                          {
                            "id": "python;__builtin__.int",
                            "name": "int",
                            "examples": [
                              "4",
                              "2",
                              "1"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "sort_keys",
                        "types": [
                          {
                            "id": "python;__builtin__.bool",
                            "name": "bool",
                            "examples": [
                              "True if pretty else False"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "args": [
                  {
                    "name": "obj",
                    "types": [
                      {
                        "id": "python;__builtin__.dict",
                        "name": "dict",
                        "examples": [
                          "{}",
                          "{'success': True}",
                          "{\"message\": message}"
                        ]
                      },
                      {
                        "id": "python;__builtin__.str",
                        "name": "str",
                        "examples": [
                          "\"'Invalid state parameter.'\"",
                          "\"'Failed to upgrade the authorization code.'\"",
                          "\"'Current user not connected.'\""
                        ]
                      },
                      {
                        "id": "python;...",
                        "name": "",
                        "examples": null
                      }
                    ]
                  }
                ],
                "language_details": {
                  "python": {
                    "kwargs": [
                      {
                        "name": "cls",
                        "types": [
                          {
                            "id": "python;__builtin__.type",
                            "name": "type",
                            "examples": [
                              "json.JSONEncoder if self.compact else DateJSONEncoder"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "args": [
                  {
                    "name": "obj",
                    "types": [
                      {
                        "id": "python;__builtin__.dict",
                        "name": "dict",
                        "examples": [
                          "{}",
                          "{'success': True}",
                          "{\"message\": message}"
                        ]
                      },
                      {
                        "id": "python;__builtin__.str",
                        "name": "str",
                        "examples": [
                          "\"'Invalid state parameter.'\"",
                          "\"'Failed to upgrade the authorization code.'\"",
                          "\"'Current user not connected.'\""
                        ]
                      },
                      {
                        "id": "python;...",
                        "name": "",
                        "examples": null
                      }
                    ]
                  }
                ],
                "language_details": {
                  "python": {
                    "kwargs": [
                      {
                        "name": "default",
                        "types": [
                          {
                            "id": "python;new.function",
                            "name": "function",
                            "examples": null
                          },
                          {
                            "id": "python;__builtin__.function",
                            "name": "function",
                            "examples": [
                              "lambda o: o.__dict__",
                              "lambda o: dict((k, v) for k, v in o.__dict__.iteritems())",
                              "lambda obj: obj.__dict__"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "language_details": {
              "python": {
                "kwarg": {
                  "name": "kw",
                  "inferred_value": null,
                  "synopsis": "",
                  "language_details": {
                    "python": null
                  }
                },
                "kwarg_parameters": [
                  {
                    "name": "use_decimal",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "content_type",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "str",
                        "type": "str",
                        "type_id": "python;__builtin__.str"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "mimetype",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "str",
                        "type": "str",
                        "type_id": "python;__builtin__.str"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "double_precision",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "int",
                        "type": "int",
                        "type_id": "python;__builtin__.int"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "serializers",
                    "inferred_value": null,
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "intent",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "int",
                        "type": "int",
                        "type_id": "python;__builtin__.int"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "escape_forward_slashes",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "namedtuple_as_object",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "proxyMap",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "NoneType",
                        "type": "NoneType",
                        "type_id": ""
                      },
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "dict",
                        "type": "dict",
                        "type_id": "python;__builtin__.dict"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "float_round",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "int",
                        "type": "int",
                        "type_id": "python;__builtin__.int"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "status",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "int",
                        "type": "int",
                        "type_id": "python;__builtin__.int"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "includes",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "NoneType",
                        "type": "NoneType",
                        "type_id": ""
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "datetimeencoder",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "function",
                        "type": "function",
                        "type_id": ""
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "index",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "int",
                        "type": "int",
                        "type_id": "python;__builtin__.int"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "excludes",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "NoneType",
                        "type": "NoneType",
                        "type_id": ""
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "sort_keysv",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "ensure_asciii",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "timezone",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "NoneType",
                        "type": "NoneType",
                        "type_id": ""
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "extra",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "NoneType",
                        "type": "NoneType",
                        "type_id": ""
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "logging",
                    "inferred_value": null,
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "format",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "int",
                        "type": "int",
                        "type_id": "python;__builtin__.int"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "ignore_attributes",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "list",
                        "type": "list",
                        "type_id": "python;__builtin__.list"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "html_safe",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "request",
                    "inferred_value": null,
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "camel_case",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "ensure_asscii",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "bool",
                        "type": "bool",
                        "type_id": "python;__builtin__.bool"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "url_kwargs",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "dict",
                        "type": "dict",
                        "type_id": "python;__builtin__.dict"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "model_additional",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "dict",
                        "type": "dict",
                        "type_id": "python;__builtin__.dict"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  },
                  {
                    "name": "orient",
                    "inferred_value": [
                      {
                        "id": "",
                        "kind": "instance",
                        "repr": "str",
                        "type": "str",
                        "type_id": "python;__builtin__.str"
                      }
                    ],
                    "synopsis": "",
                    "language_details": {
                      "python": null
                    }
                  }
                ],
                "return_annotation": null
              }
            }
          },
          "type": null,
          "instance": null,
          "module": null
        },
        "ancestors": [
          {
            "id": "python;json",
            "name": "json"
          }
        ]
      }
    ],
    "synopsis": ""
  },
  "report": {
    "definition": null,
    "description_text": "Serialize obj to a JSON formatted str using this conversion\ntable.  If ensure_ascii is False, the result may\ncontain non-ASCII characters and the return value may be a unicode\ninstance.\nThe arguments have the same meaning as in dump().\nNote\nKeys in key/value pairs of JSON are always of the type str. When\na dictionary is converted into JSON, all the keys of the dictionary are\ncoerced to strings. As a result of this, if a dictionary is converted\ninto JSON and then back into a dictionary, the dictionary may not equal\nthe original one. That is, loads(dumps(x)) != x if x has non-string\nkeys.",
    "description_html": "\u003cbody\u003e\u003cp\u003eSerialize \u003cem\u003eobj\u003c/em\u003e to a JSON formatted \u003ca\u003e\u003ccode\u003estr\u003c/code\u003e\u003c/a\u003e using this \u003ca\u003e\u003cem\u003econversion\ntable\u003c/em\u003e\u003c/a\u003e.  If \u003cem\u003eensure_ascii\u003c/em\u003e is \u003ccode\u003eFalse\u003c/code\u003e, the result may\ncontain non-ASCII characters and the return value may be a \u003ca\u003e\u003ccode\u003eunicode\u003c/code\u003e\u003c/a\u003e\ninstance.\u003c/p\u003e\u003cp\u003eThe arguments have the same meaning as in \u003ca class=\"internal_link\" href=\"#json.dump\"\u003e\u003ccode\u003edump()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eNote\u003c/p\u003e\n\u003cp\u003eKeys in key/value pairs of JSON are always of the type \u003ca\u003e\u003ccode\u003estr\u003c/code\u003e\u003c/a\u003e. When\na dictionary is converted into JSON, all the keys of the dictionary are\ncoerced to strings. As a result of this, if a dictionary is converted\ninto JSON and then back into a dictionary, the dictionary may not equal\nthe original one. That is, \u003ccode\u003eloads(dumps(x))\u003c/code\u003e\u003ccode\u003e \u003c/code\u003e\u003ccode\u003e!=\u003c/code\u003e\u003ccode\u003e \u003c/code\u003e\u003ccode\u003ex\u003c/code\u003e if x has non-string\nkeys.\u003c/p\u003e\n\u003c/body\u003e",
    "examples": [
      {
        "id": 327,
        "title": "Encode Python primitives to JSON strings"
      },
      {
        "id": 329,
        "title": "Encode a `dict` to a JSON string"
      },
      {
        "id": 328,
        "title": "Encode a `list` to a JSON string"
      },
      {
        "id": 4759,
        "title": "Escape special characters when encoding strings to JSON"
      },
      {
        "id": 326,
        "title": "Encode a `dict` to a JSON string with sorted keys"
      },
      {
        "id": 337,
        "title": "Encode a `dict` to a JSON string with custom separators"
      },
      {
        "id": 336,
        "title": "Encode a `dict` to a JSON string without spaces in separators"
      },
      {
        "id": 338,
        "title": "Encode a `dict` to a JSON string with indentation"
      },
      {
        "id": 2880,
        "title": "Convert a `dict` to a JSON string without allowing `NaN`"
      },
      {
        "id": 343,
        "title": "Encode a custom object with an extended JSONEncoder"
      },
      {
        "id": 4767,
        "title": "Encode a custom object to JSON using serialization of the class"
      }
    ],
    "usages": [
      {
        "code": "json.dumps()",
        "filename": "/home/user/source/python-test/TestModule/whitelisted/test2.py",
        "line": 2,
        "begin_bytes": 12,
        "begin_runes": 12
      }
    ],
    "total_usages": 1,
    "links": [
      {
        "title": "How to make a class JSON serializable",
        "url": "https://stackoverflow.com/questions/3768895",
        "stackoverflow": {
          "score": 326
        }
      },
      {
        "title": "How to get string objects instead of Unicode ones from JSON in Python?",
        "url": "https://stackoverflow.com/questions/956867",
        "stackoverflow": {
          "score": 181
        }
      },
      {
        "title": "Saving utf-8 texts in json.dumps as UTF8, not as \\u escape sequence",
        "url": "https://stackoverflow.com/questions/18337407",
        "stackoverflow": {
          "score": 139
        }
      },
      {
        "title": "json.dumps vs flask.jsonify",
        "url": "https://stackoverflow.com/questions/7907596",
        "stackoverflow": {
          "score": 115
        }
      },
      {
        "title": "How to return json using Flask web framework",
        "url": "https://stackoverflow.com/questions/13081532",
        "stackoverflow": {
          "score": 115
        }
      },
      {
        "title": "TransactionManagementError \"You can't execute queries until the end of the 'atomic' block\" while using signals, but only during Unit Testing",
        "url": "https://stackoverflow.com/questions/21458387",
        "stackoverflow": {
          "score": 79
        }
      },
      {
        "title": "Python sets are not json serializable",
        "url": "https://stackoverflow.com/questions/8230315",
        "stackoverflow": {
          "score": 74
        }
      },
      {
        "title": "How to serialize SqlAlchemy result to JSON?",
        "url": "https://stackoverflow.com/questions/5022066",
        "stackoverflow": {
          "score": 71
        }
      },
      {
        "title": "Parse JSON in Python",
        "url": "https://stackoverflow.com/questions/7771011",
        "stackoverflow": {
          "score": 63
        }
      },
      {
        "title": "Items in JSON object are out of order using \"json.dumps\"?",
        "url": "https://stackoverflow.com/questions/10844064",
        "stackoverflow": {
          "score": 61
        }
      },
      {
        "title": "How to dynamically build a JSON object with Python?",
        "url": "https://stackoverflow.com/questions/23110383",
        "stackoverflow": {
          "score": 56
        }
      },
      {
        "title": "Python's json module, converts int dictionary keys to strings",
        "url": "https://stackoverflow.com/questions/1450957",
        "stackoverflow": {
          "score": 56
        }
      },
      {
        "title": "Python - json without whitespaces",
        "url": "https://stackoverflow.com/questions/16311562",
        "stackoverflow": {
          "score": 53
        }
      },
      {
        "title": "Format floats with standard json module",
        "url": "https://stackoverflow.com/questions/1447287",
        "stackoverflow": {
          "score": 53
        }
      },
      {
        "title": "Convert Python dictionary to JSON array",
        "url": "https://stackoverflow.com/questions/14661051",
        "stackoverflow": {
          "score": 42
        }
      },
      {
        "title": "\"TypeError: (Integer) is not JSON serializable\" when serializing JSON in Python?",
        "url": "https://stackoverflow.com/questions/11942364",
        "stackoverflow": {
          "score": 42
        }
      },
      {
        "title": "How to change json encoding behaviour for serializable python object?",
        "url": "https://stackoverflow.com/questions/16405969",
        "stackoverflow": {
          "score": 38
        }
      },
      {
        "title": "JSON output sorting in Python",
        "url": "https://stackoverflow.com/questions/2774361",
        "stackoverflow": {
          "score": 36
        }
      },
      {
        "title": "Making object JSON serializable with regular encoder",
        "url": "https://stackoverflow.com/questions/18478287",
        "stackoverflow": {
          "score": 36
        }
      },
      {
        "title": "Django: \"TypeError: [] is not JSON serializable\" Why?",
        "url": "https://stackoverflow.com/questions/2243002",
        "stackoverflow": {
          "score": 33
        }
      }
    ],
    "total_links": 50
  }
}